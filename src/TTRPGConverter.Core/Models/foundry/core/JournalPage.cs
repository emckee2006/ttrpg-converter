//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Core
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ownership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public OwnershipDefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Individual journal entry page
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Json
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Page content type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public JsonType Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public Title? Title { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("image")]
        public Image? Image { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("text")]
        public Text? Text { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("video")]
        public Video? Video { get; set; } = default!;

        /// <summary>
        /// Source URL for PDF/external content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("src")]
        public System.Uri? Src { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public Ownership? Ownership { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OwnershipDefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum JsonType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"text")]
        Text = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"image")]
        Image = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"video")]
        Video = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Title
    {

        /// <summary>
        /// Whether to show page title
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("show")]
        public bool? Show { get; set; } = default!;

        /// <summary>
        /// Heading level (1-6)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("level")]
        [System.ComponentModel.DataAnnotations.Range(1, 6)]
        public int? Level { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Image
    {

        /// <summary>
        /// Image caption text
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("caption")]
        public string? Caption { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Text
    {

        /// <summary>
        /// Rich text HTML content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        public string? Content { get; set; } = default!;

        /// <summary>
        /// Markdown source content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("markdown")]
        public string? Markdown { get; set; } = default!;

        /// <summary>
        /// Text format: 1=HTML, 2=Markdown
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("format")]
        public TextFormat? Format { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Video
    {

        /// <summary>
        /// Whether to loop video playback
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("loop")]
        public bool? Loop { get; set; } = default!;

        /// <summary>
        /// Whether to autoplay video
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("autoplay")]
        public bool? Autoplay { get; set; } = default!;

        /// <summary>
        /// Video volume (0-1)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("volume")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Volume { get; set; } = default!;

        /// <summary>
        /// Start timestamp in seconds
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Timestamp { get; set; } = default!;

        /// <summary>
        /// Video display width
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("width")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Width { get; set; } = default!;

        /// <summary>
        /// Video display height
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("height")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Height { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum TextFormat
    {

        _1 = 1,


        _2 = 2,


    }
}