//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Core
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ownership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public OwnershipDefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Document creation/modification metadata
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DocumentStats
    {

        /// <summary>
        /// Game system ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemId")]
        public string? SystemId { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// Foundry core version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        public string? CoreVersion { get; set; } = default!;

        /// <summary>
        /// Creation timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdTime")]
        public double? CreatedTime { get; set; } = default!;

        /// <summary>
        /// Last modification timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("modifiedTime")]
        public double? ModifiedTime { get; set; } = default!;

        /// <summary>
        /// User ID who last modified
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedBy")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? LastModifiedBy { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common properties shared by all Foundry VTT documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BaseDocument
    {

        /// <summary>
        /// Unique 16-character document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        /// <summary>
        /// Document name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Parent folder ID, null if in root
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("folder")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Folder { get; set; } = default!;

        /// <summary>
        /// Sort order for display
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public Ownership? Ownership { get; set; } = default!;

        /// <summary>
        /// Module/system-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("_stats")]
        public DocumentStats? _stats { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT rollable table documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Json : BaseDocument
    {

        /// <summary>
        /// Table description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("results")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.List<Results> Results { get; set; } = new System.Collections.ObjectModel.Collection<Results>();

        /// <summary>
        /// Dice formula for rolling
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("formula")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d*d\d+([+-]\d+)?$|^\d+$")]
        public string? Formula { get; set; } = default!;

        /// <summary>
        /// Whether results can be rolled multiple times
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("replacement")]
        public bool? Replacement { get; set; } = true;

        /// <summary>
        /// Whether to display the dice roll
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayRoll")]
        public bool? DisplayRoll { get; set; } = true;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OwnershipDefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Results
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? _id { get; set; } = default!;

        /// <summary>
        /// Result type: 0=text, 1=document, 2=compendium
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public double? Type { get; set; } = TTRPGConverter.Core.Models.Foundry.Core.double._0;

        /// <summary>
        /// Result text
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("text")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Text { get; set; } = default!;

        /// <summary>
        /// Result image
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// Document collection name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("collection")]
        public string? Collection { get; set; } = default!;

        /// <summary>
        /// Referenced document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("resultId")]
        public string? ResultId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double Weight { get; set; } = 1D;

        /// <summary>
        /// Dice range [low, high]
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("range")]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        [System.ComponentModel.DataAnnotations.MaxLength(2)]
        public System.Collections.Generic.List<double>? Range { get; set; } = default!;

        /// <summary>
        /// Whether this result has been drawn
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("drawn")]
        public bool? Drawn { get; set; } = false;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}