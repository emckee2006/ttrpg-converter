//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Common
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Currency amounts
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Currency
    {

        /// <summary>
        /// Platinum pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("pp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Pp { get; set; } = default!;

        /// <summary>
        /// Gold pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("gp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Gp { get; set; } = default!;

        /// <summary>
        /// Electrum pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("ep")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Ep { get; set; } = default!;

        /// <summary>
        /// Silver pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Sp { get; set; } = default!;

        /// <summary>
        /// Copper pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Cp { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}