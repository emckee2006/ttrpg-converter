//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Common
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Texture/image with additional properties
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Texture
    {

        [System.Text.Json.Serialization.JsonPropertyName("src")]
        public System.Uri? Src { get; set; } = default!;

        /// <summary>
        /// Horizontal scale factor
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scaleX")]
        public double? ScaleX { get; set; } = default!;

        /// <summary>
        /// Vertical scale factor
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scaleY")]
        public double? ScaleY { get; set; } = default!;

        /// <summary>
        /// Horizontal offset
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("offsetX")]
        public double? OffsetX { get; set; } = default!;

        /// <summary>
        /// Vertical offset
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("offsetY")]
        public double? OffsetY { get; set; } = default!;

        /// <summary>
        /// Rotation in degrees
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("rotation")]
        public double? Rotation { get; set; } = default!;

        /// <summary>
        /// Hex color tint
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("tint")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[0-9a-fA-F]{6}$")]
        public string? Tint { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}