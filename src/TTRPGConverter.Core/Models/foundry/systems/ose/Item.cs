//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Systems.Ose
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ownership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public OwnershipDefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Document creation/modification metadata
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DocumentStats
    {

        /// <summary>
        /// Game system ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemId")]
        public string? SystemId { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// Foundry core version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        public string? CoreVersion { get; set; } = default!;

        /// <summary>
        /// Creation timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdTime")]
        public double? CreatedTime { get; set; } = default!;

        /// <summary>
        /// Last modification timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("modifiedTime")]
        public double? ModifiedTime { get; set; } = default!;

        /// <summary>
        /// User ID who last modified
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedBy")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? LastModifiedBy { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common properties shared by all Foundry VTT documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BaseDocument
    {

        /// <summary>
        /// Unique 16-character document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        /// <summary>
        /// Document name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Parent folder ID, null if in root
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("folder")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Folder { get; set; } = default!;

        /// <summary>
        /// Sort order for display
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public Ownership? Ownership { get; set; } = default!;

        /// <summary>
        /// Module/system-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("_stats")]
        public DocumentStats? _stats { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT Old School Essentials item documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Json : BaseDocument
    {

        /// <summary>
        /// OSE item type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public JsonType Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// OSE-specific item data
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public System System { get; set; } = new System();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OwnershipDefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum JsonType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"weapon")]
        Weapon = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"armor")]
        Armor = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"item")]
        Item = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"spell")]
        Spell = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"ability")]
        Ability = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"container")]
        Container = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class System
    {

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public Description? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public Quantity? Quantity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        public Weight? Weight { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cost")]
        public Cost? Cost { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("equipped")]
        public bool? Equipped { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("treasure")]
        public bool? Treasure { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("damage")]
        public Damage? Damage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range")]
        public Range? Range { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rate")]
        public Rate? Rate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("slow")]
        public bool? Slow { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("melee")]
        public bool? Melee { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("missile")]
        public bool? Missile { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ac")]
        public Ac? Ac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("aac")]
        public Aac? Aac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lvl")]
        public Lvl? Lvl { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("class")]
        public string? Class { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range_spell")]
        public Range_spell? Range_spell { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("duration")]
        public Duration? Duration { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("save")]
        public Save? Save { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("roll")]
        public Roll? Roll { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("memorized")]
        public bool? Memorized { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cast")]
        public bool? Cast { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reqs")]
        public Reqs? Reqs { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rollType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SystemRollType? RollType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rollTarget")]
        public string? RollTarget { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Description
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Quantity
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Weight
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Cost
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Damage
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Range
    {

        [System.Text.Json.Serialization.JsonPropertyName("short")]
        public double? Short { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("medium")]
        public double? Medium { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("long")]
        public double? Long { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Rate
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ac
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Aac
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Lvl
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(1D, 6D)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Range_spell
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Duration
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Save
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Roll
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Reqs
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum SystemRollType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"result")]
        Result = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"above")]
        Above = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"below")]
        Below = 2,


    }
}