//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Systems.Dnd5e
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ownership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public OwnershipDefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Document creation/modification metadata
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DocumentStats
    {

        /// <summary>
        /// Game system ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemId")]
        public string? SystemId { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// Foundry core version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        public string? CoreVersion { get; set; } = default!;

        /// <summary>
        /// Creation timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdTime")]
        public double? CreatedTime { get; set; } = default!;

        /// <summary>
        /// Last modification timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("modifiedTime")]
        public double? ModifiedTime { get; set; } = default!;

        /// <summary>
        /// User ID who last modified
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedBy")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? LastModifiedBy { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common properties shared by all Foundry VTT documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BaseDocument
    {

        /// <summary>
        /// Unique 16-character document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        /// <summary>
        /// Document name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Parent folder ID, null if in root
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("folder")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Folder { get; set; } = default!;

        /// <summary>
        /// Sort order for display
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public Ownership? Ownership { get; set; } = default!;

        /// <summary>
        /// Module/system-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("_stats")]
        public DocumentStats? _stats { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT D&amp;D 5e item documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Json : BaseDocument
    {

        /// <summary>
        /// DND5e item type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public JsonType Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// DND5e-specific item data
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public System System { get; set; } = new System();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OwnershipDefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum JsonType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"weapon")]
        Weapon = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"equipment")]
        Equipment = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"consumable")]
        Consumable = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"tool")]
        Tool = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"loot")]
        Loot = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"class")]
        Class = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"subclass")]
        Subclass = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"spell")]
        Spell = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"feat")]
        Feat = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"background")]
        Background = 9,


        [System.Runtime.Serialization.EnumMember(Value = @"race")]
        Race = 10,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class System
    {

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public Description? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Quantity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Weight { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("price")]
        public Price? Price { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rarity")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SystemRarity? Rarity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("identified")]
        public bool? Identified { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("activation")]
        public Activation? Activation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("duration")]
        public Duration? Duration { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("target")]
        public Target? Target { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range")]
        public Range? Range { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("uses")]
        public Uses? Uses { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("damage")]
        public Damage? Damage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("armor")]
        public Armor? Armor { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hp")]
        public Hp? Hp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weaponType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public SystemWeaponType? WeaponType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("properties")]
        public System.Collections.Generic.Dictionary<string, bool>? Properties { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("proficient")]
        public bool? Proficient { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("equipped")]
        public bool? Equipped { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("attuned")]
        public bool? Attuned { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Description
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("chat")]
        public string? Chat { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("unidentified")]
        public string? Unidentified { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Price
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("denomination")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PriceDenomination? Denomination { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum SystemRarity
    {

        [System.Runtime.Serialization.EnumMember(Value = @"common")]
        Common = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"uncommon")]
        Uncommon = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"rare")]
        Rare = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"veryRare")]
        VeryRare = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"legendary")]
        Legendary = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"artifact")]
        Artifact = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Activation
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ActivationType? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cost")]
        public double? Cost { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("condition")]
        public string? Condition { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Duration
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("units")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DurationUnits? Units { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Target
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("width")]
        public double? Width { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("units")]
        public string? Units { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Range
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("long")]
        public double? Long { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("units")]
        public string? Units { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Uses
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("per")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public UsesPer? Per { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("recovery")]
        public string? Recovery { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Damage
    {

        [System.Text.Json.Serialization.JsonPropertyName("parts")]
        public System.Collections.Generic.List<System.Collections.Generic.List<string>>? Parts { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("versatile")]
        public string? Versatile { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Armor
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dex")]
        public double? Dex { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("magicalBonus")]
        public double? MagicalBonus { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Hp
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dt")]
        public double? Dt { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("conditions")]
        public string? Conditions { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum SystemWeaponType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"simpleM")]
        SimpleM = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"simpleR")]
        SimpleR = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"martialM")]
        MartialM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"martialR")]
        MartialR = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"natural")]
        Natural = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"improv")]
        Improv = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"siege")]
        Siege = 6,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum PriceDenomination
    {

        [System.Runtime.Serialization.EnumMember(Value = @"pp")]
        Pp = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"gp")]
        Gp = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"ep")]
        Ep = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"sp")]
        Sp = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"cp")]
        Cp = 4,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ActivationType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"")]
        Empty = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"action")]
        Action = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"bonus")]
        Bonus = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"reaction")]
        Reaction = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"minute")]
        Minute = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"hour")]
        Hour = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 6,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum DurationUnits
    {

        [System.Runtime.Serialization.EnumMember(Value = @"inst")]
        Inst = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"turn")]
        Turn = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"round")]
        Round = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"minute")]
        Minute = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"hour")]
        Hour = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"month")]
        Month = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"year")]
        Year = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"perm")]
        Perm = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"spec")]
        Spec = 9,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum UsesPer
    {

        [System.Runtime.Serialization.EnumMember(Value = @"charges")]
        Charges = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"sr")]
        Sr = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"lr")]
        Lr = 3,


    }
}