//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Systems.Pf1e
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ownership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public OwnershipDefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Document creation/modification metadata
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DocumentStats
    {

        /// <summary>
        /// Game system ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemId")]
        public string? SystemId { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// Foundry core version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        public string? CoreVersion { get; set; } = default!;

        /// <summary>
        /// Creation timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdTime")]
        public double? CreatedTime { get; set; } = default!;

        /// <summary>
        /// Last modification timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("modifiedTime")]
        public double? ModifiedTime { get; set; } = default!;

        /// <summary>
        /// User ID who last modified
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedBy")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? LastModifiedBy { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common properties shared by all Foundry VTT documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BaseDocument
    {

        /// <summary>
        /// Unique 16-character document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        /// <summary>
        /// Document name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Parent folder ID, null if in root
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("folder")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Folder { get; set; } = default!;

        /// <summary>
        /// Sort order for display
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public Ownership? Ownership { get; set; } = default!;

        /// <summary>
        /// Module/system-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("_stats")]
        public DocumentStats? _stats { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT Pathfinder 1e item documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Json : BaseDocument
    {

        /// <summary>
        /// PF1e item type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public JsonType Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// PF1e-specific item data
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public System System { get; set; } = new System();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OwnershipDefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum JsonType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"weapon")]
        Weapon = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"equipment")]
        Equipment = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"consumable")]
        Consumable = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"loot")]
        Loot = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"class")]
        Class = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"spell")]
        Spell = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"feat")]
        Feat = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"buff")]
        Buff = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"attack")]
        Attack = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"race")]
        Race = 9,


        [System.Runtime.Serialization.EnumMember(Value = @"enhancement")]
        Enhancement = 10,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class System
    {

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public Description? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Quantity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Weight { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("price")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Price { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("identified")]
        public bool? Identified { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("equipped")]
        public bool? Equipped { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("carried")]
        public bool? Carried { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("activation")]
        public Activation? Activation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("duration")]
        public Duration? Duration { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("target")]
        public Target? Target { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range")]
        public Range? Range { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("uses")]
        public Uses? Uses { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("damage")]
        public Damage? Damage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("armor")]
        public Armor? Armor { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weapon")]
        public Weapon? Weapon { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("masterwork")]
        public bool? Masterwork { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hardness")]
        public double? Hardness { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hp")]
        public Hp? Hp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("broken")]
        public bool? Broken { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("level")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Level { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("school")]
        public string? School { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("components")]
        public Components? Components { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("materials")]
        public Materials? Materials { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("save")]
        public Save? Save { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sr")]
        public bool? Sr { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Description
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("chat")]
        public string? Chat { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Activation
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ActivationType? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cost")]
        public double? Cost { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("condition")]
        public string? Condition { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Duration
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("units")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DurationUnits? Units { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Target
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Range
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("units")]
        public string? Units { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("long")]
        public double? Long { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Uses
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("per")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public UsesPer? Per { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Damage
    {

        [System.Text.Json.Serialization.JsonPropertyName("parts")]
        public System.Collections.Generic.List<System.Collections.Generic.List<string>>? Parts { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Armor
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dex")]
        public double? Dex { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("check")]
        public double? Check { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("spell")]
        public double? Spell { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("speed")]
        public object? Speed { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Weapon
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string? Size { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("critMult")]
        public double? CritMult { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("critRange")]
        public double? CritRange { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range")]
        public double? Range { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Hp
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Components
    {

        [System.Text.Json.Serialization.JsonPropertyName("verbal")]
        public bool? Verbal { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("somatic")]
        public bool? Somatic { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("material")]
        public bool? Material { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("focus")]
        public bool? Focus { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("divineFocus")]
        public bool? DivineFocus { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Materials
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Save
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dc")]
        public double? Dc { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ActivationType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"")]
        Empty = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"standard")]
        Standard = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"move")]
        Move = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"swift")]
        Swift = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"immediate")]
        Immediate = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"free")]
        Free = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"attack")]
        Attack = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"full")]
        Full = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"round")]
        Round = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"minute")]
        Minute = 9,


        [System.Runtime.Serialization.EnumMember(Value = @"hour")]
        Hour = 10,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum DurationUnits
    {

        [System.Runtime.Serialization.EnumMember(Value = @"inst")]
        Inst = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"perm")]
        Perm = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"conc")]
        Conc = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"round")]
        Round = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"minute")]
        Minute = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"hour")]
        Hour = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 6,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum UsesPer
    {

        [System.Runtime.Serialization.EnumMember(Value = @"single")]
        Single = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"week")]
        Week = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"charges")]
        Charges = 3,


    }
}