//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Foundry.Ose
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Ability score with modifiers
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonAbilityScore
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(1D, 30D)]
        public double? Value { get; set; } = default!;

        /// <summary>
        /// Proficiency multiplier (0, 0.5, 1, 2)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("proficient")]
        public double? Proficient { get; set; } = default!;

        /// <summary>
        /// Additional bonus
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bonus")]
        public double? Bonus { get; set; } = default!;

        /// <summary>
        /// Calculated modifier
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        /// <summary>
        /// Calculated save bonus
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("save")]
        public double? Save { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common asset and media reference structures for Foundry VTT
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonAssets
    {

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common properties shared by all Foundry VTT documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonBaseDocument
    {

        /// <summary>
        /// Unique 16-character document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        /// <summary>
        /// Document name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Parent folder ID, null if in root
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("folder")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Folder { get; set; } = default!;

        /// <summary>
        /// Sort order for display
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public CommonOwnership? Ownership { get; set; } = default!;

        /// <summary>
        /// Module/system-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("_stats")]
        public CommonDocumentStats? _stats { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Currency amounts
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonCurrency
    {

        /// <summary>
        /// Platinum pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("pp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Pp { get; set; } = default!;

        /// <summary>
        /// Gold pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("gp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Gp { get; set; } = default!;

        /// <summary>
        /// Electrum pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("ep")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Ep { get; set; } = default!;

        /// <summary>
        /// Silver pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Sp { get; set; } = default!;

        /// <summary>
        /// Copper pieces
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Cp { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Common data type definitions for Foundry VTT schemas
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonDataTypes
    {

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Width and height dimensions
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonDimensions
    {

        [System.Text.Json.Serialization.JsonPropertyName("width")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Width { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("height")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Height { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Document creation/modification metadata
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonDocumentStats
    {

        /// <summary>
        /// Game system ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemId")]
        public string? SystemId { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// Foundry core version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        public string? CoreVersion { get; set; } = default!;

        /// <summary>
        /// Creation timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdTime")]
        public double? CreatedTime { get; set; } = default!;

        /// <summary>
        /// Last modification timestamp (Unix milliseconds)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("modifiedTime")]
        public double? ModifiedTime { get; set; } = default!;

        /// <summary>
        /// User ID who last modified
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedBy")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? LastModifiedBy { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Light emission properties
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonLightSource
    {

        /// <summary>
        /// Bright light radius
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bright")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Bright { get; set; } = default!;

        /// <summary>
        /// Dim light radius
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("dim")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Dim { get; set; } = default!;

        /// <summary>
        /// Light angle in degrees
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("angle")]
        [System.ComponentModel.DataAnnotations.Range(0D, 360D)]
        public double? Angle { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("color")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[0-9a-fA-F]{6}$")]
        public string? Color { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("animation")]
        public Animation? Animation { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Numeric value with min/max range
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonNumericRange
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("min")]
        public double? Min { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Document ownership permissions by user role
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonOwnership
    {

        /// <summary>
        /// Default permission level (0=None, 1=Limited, 2=Observer, 3=Owner)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("default")]
        public Commonownershipdefault? Default { get; set; } = default!;

    }

    /// <summary>
    /// Permission levels: 0=None, 1=Limited, 2=Observer, 3=Owner
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum CommonPermissions
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    /// <summary>
    /// X/Y coordinate position
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonPosition
    {

        [System.Text.Json.Serialization.JsonPropertyName("x")]
        public double? X { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("y")]
        public double? Y { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Resource with current/maximum values
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonResource
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Max { get; set; } = default!;

        /// <summary>
        /// Temporary bonus
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("temp")]
        public double? Temp { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Texture/image with additional properties
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommonTexture
    {

        [System.Text.Json.Serialization.JsonPropertyName("src")]
        public System.Uri? Src { get; set; } = default!;

        /// <summary>
        /// Horizontal scale factor
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scaleX")]
        public double? ScaleX { get; set; } = default!;

        /// <summary>
        /// Vertical scale factor
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scaleY")]
        public double? ScaleY { get; set; } = default!;

        /// <summary>
        /// Horizontal offset
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("offsetX")]
        public double? OffsetX { get; set; } = default!;

        /// <summary>
        /// Vertical offset
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("offsetY")]
        public double? OffsetY { get; set; } = default!;

        /// <summary>
        /// Rotation in degrees
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("rotation")]
        public double? Rotation { get; set; } = default!;

        /// <summary>
        /// Hex color tint
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("tint")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[0-9a-fA-F]{6}$")]
        public string? Tint { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Author information for Foundry VTT content
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreAuthor
    {

        /// <summary>
        /// Author name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; } = default!;

        /// <summary>
        /// Author email
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; set; } = default!;

        /// <summary>
        /// Author website
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("url")]
        public System.Uri? Url { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT card deck documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreCards : CommonBaseDocument
    {

        /// <summary>
        /// Type of card collection
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Corecardstype Type { get; set; } = default!;

        /// <summary>
        /// Cards description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cards")]
        public System.Collections.Generic.IList<Cards>? Cards { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("displayCount")]
        public bool? DisplayCount { get; set; } = default!;

        /// <summary>
        /// Preset card configuration
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preset")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Corecardspreset? Preset { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("shuffle")]
        public bool? Shuffle { get; set; } = default!;

    }

    /// <summary>
    /// Compendium pack configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreCompendiumPack
    {

        /// <summary>
        /// Pack identifier
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Pack display name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("label")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Label { get; set; } = default!;

        /// <summary>
        /// Document type stored in this pack
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Corecompendiumpacktype Type { get; set; } = default!;

        /// <summary>
        /// Relative path to pack database file
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("path")]
        public string? Path { get; set; } = default!;

        /// <summary>
        /// Game system identifier (for system packs)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        public string? System { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public CommonOwnership? Ownership { get; set; } = default!;

        /// <summary>
        /// Pack-specific flags
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Individual journal entry page
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreJournalPage
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string _id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Page content type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Corejournalpagetype Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public Title? Title { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("image")]
        public Image? Image { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("text")]
        public Text? Text { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("video")]
        public Video? Video { get; set; } = default!;

        /// <summary>
        /// Source URL for PDF/external content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("src")]
        public System.Uri? Src { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownership")]
        public CommonOwnership? Ownership { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT journal entry documents (system-agnostic)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreJournal : CommonBaseDocument
    {

        /// <summary>
        /// Journal pages
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("pages")]
        public System.Collections.Generic.IList<CoreJournalPage>? Pages { get; set; } = default!;

    }

    /// <summary>
    /// Schema for Foundry VTT macro documents (system-agnostic)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreMacro : CommonBaseDocument
    {

        /// <summary>
        /// Macro execution type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Coremacrotype Type { get; set; } = default!;

        /// <summary>
        /// Macro command/script content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("command")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Command { get; set; } = default!;

        /// <summary>
        /// Author user ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("author")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Author { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// Macro execution scope
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scope")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Coremacroscope? Scope { get; set; } = default!;

        /// <summary>
        /// Whether macro appears in hotbar
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("hotbar")]
        public bool? Hotbar { get; set; } = default!;

    }

    /// <summary>
    /// Schema for Foundry VTT module.json manifest files
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreModule
    {

        /// <summary>
        /// Module identifier
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z0-9-_]+$")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Module display name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Title { get; set; } = default!;

        /// <summary>
        /// Module description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; } = default!;

        /// <summary>
        /// Semantic version string
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("version")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string Version { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("compatibility")]
        [System.ComponentModel.DataAnnotations.Required]
        public Compatibility Compatibility { get; set; } = new Compatibility();

        [System.Text.Json.Serialization.JsonPropertyName("authors")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IList<Authors> Authors { get; set; } = new System.Collections.Generic.List<Authors>();

        /// <summary>
        /// Module homepage URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("url")]
        public System.Uri? Url { get; set; } = default!;

        /// <summary>
        /// Module license
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("license")]
        public string? License { get; set; } = default!;

        /// <summary>
        /// README file URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("readme")]
        public System.Uri? Readme { get; set; } = default!;

        /// <summary>
        /// Bug report URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bugs")]
        public System.Uri? Bugs { get; set; } = default!;

        /// <summary>
        /// Changelog URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("changelog")]
        public System.Uri? Changelog { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("media")]
        public System.Collections.Generic.IList<Media>? Media { get; set; } = default!;

        /// <summary>
        /// ES module files
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("esmodules")]
        public System.Collections.Generic.IList<string>? Esmodules { get; set; } = default!;

        /// <summary>
        /// Script files
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("scripts")]
        public System.Collections.Generic.IList<string>? Scripts { get; set; } = default!;

        /// <summary>
        /// CSS files
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("styles")]
        public System.Collections.Generic.IList<string>? Styles { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("languages")]
        public System.Collections.Generic.IList<Languages>? Languages { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("packs")]
        public System.Collections.Generic.IList<Packs>? Packs { get; set; } = default!;

        /// <summary>
        /// Compatible systems
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        public System.Collections.Generic.IList<string>? System { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dependencies")]
        public System.Collections.Generic.IList<Dependencies>? Dependencies { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("conflicts")]
        public System.Collections.Generic.IList<Conflicts>? Conflicts { get; set; } = default!;

        /// <summary>
        /// Whether module uses socket functionality
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("socket")]
        public bool? Socket { get; set; } = default!;

        /// <summary>
        /// Module manifest URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("manifest")]
        public System.Uri? Manifest { get; set; } = default!;

        /// <summary>
        /// Module download URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("download")]
        public System.Uri? Download { get; set; } = default!;

        /// <summary>
        /// Whether module is DRM protected
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("protected")]
        public bool? Protected { get; set; } = default!;

        /// <summary>
        /// Whether module provides core translations
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreTranslation")]
        public bool? CoreTranslation { get; set; } = default!;

        /// <summary>
        /// Whether module is a library
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("library")]
        public bool? Library { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT playlist documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CorePlaylist : CommonBaseDocument
    {

        /// <summary>
        /// Playlist description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sounds")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IList<Sounds> Sounds { get; set; } = new System.Collections.Generic.List<Sounds>();

        /// <summary>
        /// Playback mode: -1=disabled, 0=sequential, 1=shuffle, 2=simultaneous
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mode")]
        public double? Mode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("playing")]
        public bool? Playing { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fade")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Fade { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("volume")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Volume { get; set; } = default!;

    }

    /// <summary>
    /// Schema for Foundry VTT rollable table documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreRollableTable : CommonBaseDocument
    {

        /// <summary>
        /// Table description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("results")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IList<Results> Results { get; set; } = new System.Collections.Generic.List<Results>();

        /// <summary>
        /// Dice formula for rolling
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("formula")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d*d\d+([+-]\d+)?$|^\d+$")]
        public string? Formula { get; set; } = default!;

        /// <summary>
        /// Whether results can be rolled multiple times
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("replacement")]
        public bool? Replacement { get; set; } = default!;

        /// <summary>
        /// Whether to display the dice roll
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayRoll")]
        public bool? DisplayRoll { get; set; } = default!;

    }

    /// <summary>
    /// Schema for Foundry VTT scene documents (system-agnostic)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreScene : CommonBaseDocument
    {

        /// <summary>
        /// Whether this is the active scene
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("active")]
        public bool? Active { get; set; } = default!;

        /// <summary>
        /// Whether scene appears in navigation bar
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("navigation")]
        public bool? Navigation { get; set; } = default!;

        /// <summary>
        /// Navigation bar sort order
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("navOrder")]
        public double? NavOrder { get; set; } = default!;

        /// <summary>
        /// Scene thumbnail image
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// Foreground overlay image
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("foreground")]
        public System.Uri? Foreground { get; set; } = default!;

        /// <summary>
        /// Navigation thumbnail
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("thumb")]
        public System.Uri? Thumb { get; set; } = default!;

        /// <summary>
        /// Scene width in pixels
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("width")]
        [System.ComponentModel.DataAnnotations.Range(100D, double.MaxValue)]
        public double? Width { get; set; } = default!;

        /// <summary>
        /// Scene height in pixels
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("height")]
        [System.ComponentModel.DataAnnotations.Range(100D, double.MaxValue)]
        public double? Height { get; set; } = default!;

        /// <summary>
        /// Scene boundary padding
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("padding")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Padding { get; set; } = default!;

        /// <summary>
        /// Initial view position
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("initial")]
        public CommonPosition? Initial { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("backgroundColor")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[0-9a-fA-F]{6}$")]
        public string? BackgroundColor { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("grid")]
        public Grid? Grid { get; set; } = default!;

        /// <summary>
        /// Whether token vision is enabled
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("tokenVision")]
        public bool? TokenVision { get; set; } = default!;

        /// <summary>
        /// Whether fog exploration is enabled
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("fogExploration")]
        public bool? FogExploration { get; set; } = default!;

        /// <summary>
        /// Timestamp of last fog reset
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("fogReset")]
        public double? FogReset { get; set; } = default!;

        /// <summary>
        /// Whether global illumination is enabled
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("globalLight")]
        public bool? GlobalLight { get; set; } = default!;

        /// <summary>
        /// Global light darkness threshold
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("globalLightThreshold")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? GlobalLightThreshold { get; set; } = default!;

        /// <summary>
        /// Scene darkness level
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("darkness")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Darkness { get; set; } = default!;

        /// <summary>
        /// Background playlist sound ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("playlistSound")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? PlaylistSound { get; set; } = default!;

        /// <summary>
        /// Scene playlist ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("playlist")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Playlist { get; set; } = default!;

        /// <summary>
        /// Associated journal entry ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("journal")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? Journal { get; set; } = default!;

        /// <summary>
        /// Weather conditions
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("weather")]
        public string? Weather { get; set; } = default!;

    }

    /// <summary>
    /// Schema for Foundry VTT world.json configuration file
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CoreWorld
    {

        /// <summary>
        /// Display name of the world
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Title { get; set; } = default!;

        /// <summary>
        /// Unique world identifier (lowercase, alphanumeric, hyphens, underscores)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z0-9-_]+$")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Game system ID (e.g., dnd5e, pf2e, ose)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public string System { get; set; } = default!;

        /// <summary>
        /// Foundry core version (e.g., 12.331)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("coreVersion")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+(\.\d+)?$")]
        public string CoreVersion { get; set; } = default!;

        /// <summary>
        /// Game system version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("systemVersion")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+(\.\d+)?$")]
        public string? SystemVersion { get; set; } = default!;

        /// <summary>
        /// World description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// Join screen theme
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("joinTheme")]
        public string? JoinTheme { get; set; } = default!;

        /// <summary>
        /// Foundry version compatibility
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("compatibility")]
        public CompatibilityModel? Compatibility { get; set; } = default!;

        /// <summary>
        /// ISO date string of last play session
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastPlayed")]
        public string? LastPlayed { get; set; } = default!;

        /// <summary>
        /// Total playtime in seconds
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("playtime")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Playtime { get; set; } = default!;

        /// <summary>
        /// Compendium packs in this world
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("packs")]
        public System.Collections.Generic.IList<CoreCompendiumPack>? Packs { get; set; } = default!;

        /// <summary>
        /// World authors
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("authors")]
        public System.Collections.Generic.IList<CoreAuthor>? Authors { get; set; } = default!;

        /// <summary>
        /// World version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("version")]
        public string? Version { get; set; } = default!;

        /// <summary>
        /// Legacy compatibility field
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimumCoreVersion")]
        public string? MinimumCoreVersion { get; set; } = default!;

        /// <summary>
        /// Legacy compatibility field
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("compatibleCoreVersion")]
        public string? CompatibleCoreVersion { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Schema for Foundry VTT Old School Essentials actor documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OseActor : CommonBaseDocument
    {

        /// <summary>
        /// OSE actor type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Oseactortype Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// OSE-specific actor data
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public SystemModel System { get; set; } = new SystemModel();

    }

    /// <summary>
    /// Schema for Foundry VTT Old School Essentials item documents
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OseItem : CommonBaseDocument
    {

        /// <summary>
        /// OSE item type
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Oseitemtype Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// OSE-specific item data
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("system")]
        [System.ComponentModel.DataAnnotations.Required]
        public SystemModel1 System { get; set; } = new SystemModel1();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Generatedclass
    {

        [System.Text.Json.Serialization.JsonPropertyName("core_cards")]
        public CoreCards? Core_cards { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("core_journal")]
        public CoreJournal? Core_journal { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("core_macro")]
        public CoreMacro? Core_macro { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("core_scene")]
        public CoreScene? Core_scene { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("core_world")]
        public CoreWorld? Core_world { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ose_actor")]
        public OseActor? Ose_actor { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ose_item")]
        public OseItem? Ose_item { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Animation
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Animationtype? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("speed")]
        [System.ComponentModel.DataAnnotations.Range(1D, 10D)]
        public double? Speed { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("intensity")]
        [System.ComponentModel.DataAnnotations.Range(1D, 10D)]
        public double? Intensity { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Commonownershipdefault
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Corecardstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"deck")]
        Deck = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"pile")]
        Pile = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"hand")]
        Hand = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Cards
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? _id { get; set; } = default!;

        /// <summary>
        /// Card name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Card description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Cardstype Type { get; set; } = default!;

        /// <summary>
        /// Card suit
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("suit")]
        public string? Suit { get; set; } = default!;

        /// <summary>
        /// Card value
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("faces")]
        public System.Collections.Generic.IList<Faces>? Faces { get; set; } = default!;

        /// <summary>
        /// Current face index
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("face")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Face { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("drawn")]
        public bool? Drawn { get; set; } = default!;

        /// <summary>
        /// Origin deck ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("origin")]
        public string? Origin { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("width")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Width { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("height")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Height { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Corecardspreset
    {

        [System.Runtime.Serialization.EnumMember(Value = @"")]
        Empty = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"poker")]
        Poker = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"tarot")]
        Tarot = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Corecompendiumpacktype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Actor")]
        Actor = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Item")]
        Item = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"JournalEntry")]
        JournalEntry = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"Macro")]
        Macro = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"Playlist")]
        Playlist = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"RollTable")]
        RollTable = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"Scene")]
        Scene = 6,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Corejournalpagetype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"text")]
        Text = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"image")]
        Image = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"pdf")]
        Pdf = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"video")]
        Video = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Title
    {

        /// <summary>
        /// Whether to show page title
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("show")]
        public bool? Show { get; set; } = default!;

        /// <summary>
        /// Heading level (1-6)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("level")]
        [System.ComponentModel.DataAnnotations.Range(1, 6)]
        public int? Level { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Image
    {

        /// <summary>
        /// Image caption text
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("caption")]
        public string? Caption { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Text
    {

        /// <summary>
        /// Rich text HTML content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        public string? Content { get; set; } = default!;

        /// <summary>
        /// Markdown source content
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("markdown")]
        public string? Markdown { get; set; } = default!;

        /// <summary>
        /// Text format: 1=HTML, 2=Markdown
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("format")]
        public Textformat? Format { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Video
    {

        /// <summary>
        /// Whether to loop video playback
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("loop")]
        public bool? Loop { get; set; } = default!;

        /// <summary>
        /// Whether to autoplay video
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("autoplay")]
        public bool? Autoplay { get; set; } = default!;

        /// <summary>
        /// Video volume (0-1)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("volume")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Volume { get; set; } = default!;

        /// <summary>
        /// Start timestamp in seconds
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Timestamp { get; set; } = default!;

        /// <summary>
        /// Video display width
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("width")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Width { get; set; } = default!;

        /// <summary>
        /// Video display height
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("height")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Height { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Coremacrotype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"script")]
        Script = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"chat")]
        Chat = 1,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Coremacroscope
    {

        [System.Runtime.Serialization.EnumMember(Value = @"global")]
        Global = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"actors")]
        Actors = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"actor")]
        Actor = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Compatibility
    {

        /// <summary>
        /// Minimum compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimum")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string Minimum { get; set; } = default!;

        /// <summary>
        /// Verified compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("verified")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string Verified { get; set; } = default!;

        /// <summary>
        /// Maximum compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximum")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string? Maximum { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Authors
    {

        /// <summary>
        /// Author name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Author email
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; set; } = default!;

        /// <summary>
        /// Author URL
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("url")]
        public System.Uri? Url { get; set; } = default!;

        /// <summary>
        /// Author Discord username
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("discord")]
        public string? Discord { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Media
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Mediatype? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("url")]
        public System.Uri? Url { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("caption")]
        public string? Caption { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loop")]
        public bool? Loop { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("thumbnail")]
        public System.Uri? Thumbnail { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Languages
    {

        [System.Text.Json.Serialization.JsonPropertyName("lang")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z]{2}(-[A-Z]{2})?$")]
        public string Lang { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("path")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Path { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Packs
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("label")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Label { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("path")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Path { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Packstype Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("system")]
        public string? System { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("private")]
        public bool? Private { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        public object? Flags { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Dependencies
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Dependenciestype Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("manifest")]
        public System.Uri? Manifest { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("compatibility")]
        public CompatibilityModel1? Compatibility { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Conflicts
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Conflictstype? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("versionMin")]
        public string? VersionMin { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("versionMax")]
        public string? VersionMax { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Sounds
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? _id { get; set; } = default!;

        /// <summary>
        /// Sound name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Sound description
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// Audio file path
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("path")]
        public System.Uri? Path { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("playing")]
        public bool? Playing { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pausedTime")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? PausedTime { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("repeat")]
        public bool? Repeat { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("volume")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Volume { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fade")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Fade { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sort")]
        public double? Sort { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streaming")]
        public bool? Streaming { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Results
    {

        [System.Text.Json.Serialization.JsonPropertyName("_id")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]{16}$")]
        public string? _id { get; set; } = default!;

        /// <summary>
        /// Result type: 0=text, 1=document, 2=compendium
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public double? Type { get; set; } = default!;

        /// <summary>
        /// Result text
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("text")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Text { get; set; } = default!;

        /// <summary>
        /// Result image
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        /// <summary>
        /// Document collection name
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("collection")]
        public string? Collection { get; set; } = default!;

        /// <summary>
        /// Referenced document ID
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("resultId")]
        public string? ResultId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double Weight { get; set; } = default!;

        /// <summary>
        /// Dice range [low, high]
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("range")]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        [System.ComponentModel.DataAnnotations.MaxLength(2)]
        public System.Collections.Generic.IList<double>? Range { get; set; } = default!;

        /// <summary>
        /// Whether this result has been drawn
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("drawn")]
        public bool? Drawn { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Grid
    {

        /// <summary>
        /// Grid type: 0=None, 1=Square, 2=Hex(V), 3=Hex(H), 4=Gridless, 5=Isometric
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public Gridtype? Type { get; set; } = default!;

        /// <summary>
        /// Grid size in pixels
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("size")]
        [System.ComponentModel.DataAnnotations.Range(50D, double.MaxValue)]
        public double? Size { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("color")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[0-9a-fA-F]{6}$")]
        public string? Color { get; set; } = default!;

        /// <summary>
        /// Grid opacity
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("alpha")]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double? Alpha { get; set; } = default!;

        /// <summary>
        /// Distance per grid unit
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("distance")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Distance { get; set; } = default!;

        /// <summary>
        /// Distance units (ft, m, etc.)
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("units")]
        public string? Units { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CompatibilityModel
    {

        /// <summary>
        /// Minimum supported Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimum")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+(\.\d+)?$")]
        public string? Minimum { get; set; } = default!;

        /// <summary>
        /// Last verified Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("verified")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+(\.\d+)?$")]
        public string? Verified { get; set; } = default!;

        /// <summary>
        /// Maximum supported Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximum")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+(\.\d+)?$")]
        public string? Maximum { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Oseactortype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"character")]
        Character = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"monster")]
        Monster = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"npc")]
        Npc = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("abilities")]
        public Abilities? Abilities { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hp")]
        public Hp? Hp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ac")]
        public Ac? Ac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("aac")]
        public Aac? Aac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("thac0")]
        public Thac0? Thac0 { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("saves")]
        public Saves? Saves { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public Details? Details { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("movement")]
        public Movement? Movement { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("retainer")]
        public Retainer? Retainer { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("spells")]
        public Spells? Spells { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public Currency? Currency { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("encumbrance")]
        public Encumbrance? Encumbrance { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Oseitemtype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"weapon")]
        Weapon = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"armor")]
        Armor = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"item")]
        Item = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"spell")]
        Spell = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"ability")]
        Ability = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"container")]
        Container = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemModel1
    {

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public Description? Description { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public Quantity? Quantity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("weight")]
        public Weight? Weight { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cost")]
        public Cost? Cost { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("equipped")]
        public bool? Equipped { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("treasure")]
        public bool? Treasure { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("damage")]
        public Damage? Damage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range")]
        public Range? Range { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rate")]
        public Rate? Rate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("slow")]
        public bool? Slow { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("melee")]
        public bool? Melee { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("missile")]
        public bool? Missile { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ac")]
        public AcModel? Ac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("aac")]
        public AacModel? Aac { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lvl")]
        public Lvl? Lvl { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("class")]
        public string? Class { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("range_spell")]
        public RangeSpell? Range_spell { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("duration")]
        public Duration? Duration { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("save")]
        public Save? Save { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("roll")]
        public Roll? Roll { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("memorized")]
        public bool? Memorized { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cast")]
        public bool? Cast { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reqs")]
        public Reqs? Reqs { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rollType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public Systemmodel1rolltype? RollType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rollTarget")]
        public string? RollTarget { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Animationtype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"none")]
        None = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"pulse")]
        Pulse = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"chroma")]
        Chroma = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"wave")]
        Wave = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"fog")]
        Fog = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"sunburst")]
        Sunburst = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"dome")]
        Dome = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"emanation")]
        Emanation = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"hexa")]
        Hexa = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"ghost")]
        Ghost = 9,


        [System.Runtime.Serialization.EnumMember(Value = @"energy")]
        Energy = 10,


        [System.Runtime.Serialization.EnumMember(Value = @"roiling")]
        Roiling = 11,


        [System.Runtime.Serialization.EnumMember(Value = @"hole")]
        Hole = 12,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Cardstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"base")]
        Base = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"preset")]
        Preset = 1,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Faces
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("text")]
        public string? Text { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("img")]
        public System.Uri? Img { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Textformat
    {

        _1 = 1,


        _2 = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Mediatype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"icon")]
        Icon = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"screenshot")]
        Screenshot = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"video")]
        Video = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Packstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Actor")]
        Actor = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Item")]
        Item = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"Scene")]
        Scene = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"JournalEntry")]
        JournalEntry = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"Macro")]
        Macro = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"RollTable")]
        RollTable = 5,


        [System.Runtime.Serialization.EnumMember(Value = @"Playlist")]
        Playlist = 6,


        [System.Runtime.Serialization.EnumMember(Value = @"Adventure")]
        Adventure = 7,


        [System.Runtime.Serialization.EnumMember(Value = @"Card")]
        Card = 8,


        [System.Runtime.Serialization.EnumMember(Value = @"Cards")]
        Cards = 9,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Dependenciestype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"module")]
        Module = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"system")]
        System = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"world")]
        World = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CompatibilityModel1
    {

        /// <summary>
        /// Minimum compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimum")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string Minimum { get; set; } = default!;

        /// <summary>
        /// Verified compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("verified")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string Verified { get; set; } = default!;

        /// <summary>
        /// Maximum compatible Foundry version
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximum")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d+\.\d+\.\d+$")]
        public string? Maximum { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Conflictstype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"module")]
        Module = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"system")]
        System = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"world")]
        World = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Gridtype
    {

        _0 = 0,


        _1 = 1,


        _2 = 2,


        _3 = 3,


        _4 = 4,


        _5 = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Abilities
    {

        [System.Text.Json.Serialization.JsonPropertyName("str")]
        public Str? Str { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("int")]
        public Int? Int { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("wis")]
        public Wis? Wis { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dex")]
        public Dex? Dex { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("con")]
        public Con? Con { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cha")]
        public Cha? Cha { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Hp
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        [System.ComponentModel.DataAnnotations.Range(1D, double.MaxValue)]
        public double? Max { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hd")]
        public string? Hd { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Ac
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("naked")]
        public double? Naked { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("shield")]
        public double? Shield { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("armor")]
        public double? Armor { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Aac
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Thac0
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Saves
    {

        [System.Text.Json.Serialization.JsonPropertyName("death")]
        public Death? Death { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("wand")]
        public Wand? Wand { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("paralysis")]
        public Paralysis? Paralysis { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("breath")]
        public Breath? Breath { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("spell")]
        public Spell? Spell { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details
    {

        [System.Text.Json.Serialization.JsonPropertyName("biography")]
        public Biography? Biography { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("class")]
        public string? Class { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("level")]
        public Level? Level { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("xp")]
        public Xp? Xp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("alignment")]
        public string? Alignment { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("race")]
        public string? Race { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Movement
    {

        [System.Text.Json.Serialization.JsonPropertyName("base")]
        public double? Base { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("encounter")]
        public double? Encounter { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("overland")]
        public double? Overland { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Retainer
    {

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]
        public bool? Enabled { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loyalty")]
        public double? Loyalty { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("wage")]
        public string? Wage { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Spells
    {

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]
        public bool? Enabled { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("spellList")]
        public System.Collections.Generic.IList<string>? SpellList { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Currency
    {

        [System.Text.Json.Serialization.JsonPropertyName("pp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Pp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Gp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ep")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Ep { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Sp { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cp")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Cp { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Encumbrance
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("max")]
        public double? Max { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pct")]
        public double? Pct { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Description
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Quantity
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Weight
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Cost
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Damage
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Range
    {

        [System.Text.Json.Serialization.JsonPropertyName("short")]
        public double? Short { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("medium")]
        public double? Medium { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("long")]
        public double? Long { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Rate
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AcModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AacModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Lvl
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(1D, 6D)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RangeSpell
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Duration
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Save
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Roll
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Reqs
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum Systemmodel1rolltype
    {

        [System.Runtime.Serialization.EnumMember(Value = @"result")]
        Result = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"above")]
        Above = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"below")]
        Below = 2,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Str
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Int
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Wis
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Dex
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Con
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Cha
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(3D, 18D)]
        public double? Value { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("mod")]
        public double? Mod { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Death
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Wand
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Paralysis
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Breath
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Spell
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Biography
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Level
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Range(1D, 14D)]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Xp
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public double? Value { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}