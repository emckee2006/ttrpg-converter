//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace TTRPGConverter.Core.Models.Roll20
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Extracted page definition
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Page
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^-[A-Za-z0-9_-]{19}$")]
        public string Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("width")]
        public double? Width { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("height")]
        public double? Height { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("background_color")]
        public string? Background_color { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("grid_opacity")]
        public double? Grid_opacity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("grid_size")]
        public double? Grid_size { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("snapping_increment")]
        public double? Snapping_increment { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fog_opacity")]
        public double? Fog_opacity { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("archived")]
        public bool? Archived { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lightupdatedrop")]
        public bool? Lightupdatedrop { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lightenforcelos")]
        public bool? Lightenforcelos { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lightrestrictmovement")]
        public bool? Lightrestrictmovement { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lightglobalillum")]
        public bool? Lightglobalillum { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }
}